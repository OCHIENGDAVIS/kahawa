import { useEffect, useState, useContext } from 'react';

import Head from 'next/head';
import Image from 'next/image';

import Banner from '@/components/banner/Banner';
import Card from '@/components/card/Card';

import { getStores } from '@/lib/coffee-store';
import { getAllStores } from '@/data/coffeee-mock';
import useTrackLocation from '@/hooks/use-track-location';

import { StoreContext } from '@/state/store.context';

import classes from '@/styles/Home.module.scss';
import { SET_COFFEE_STORES } from '@/state/action-types';

export default function Home({ stores }) {
	const { dispatch, state } = useContext(StoreContext);
	const {
		coffeeStores,
		latLong: { lat, lng },
	} = state;
	const [error, setError] = useState('');
	const { handleTrackLocation, isFindingLocation, locationErrorMessage } =
		useTrackLocation();
	useEffect(() => {
		async function fetchData() {
			if (lat && lng) {
				try {
					const fetchedStores = await getStores({ lat, lng }, 20);

					dispatch({
						type: SET_COFFEE_STORES,
						payload: { coffeeStores: fetchedStores },
					});
				} catch (error) {
					console.log(error);
					setError(error.message || 'something went wrong');
				}
			}
		}
		fetchData();
	}, [lat, lng]);

	function handleBtnClick() {
		handleTrackLocation();
	}
	const btnText = isFindingLocation ? 'Loading...' : 'view stores nearby';
	return (
		<>
			<Head>
				<title>Kahawa Epicurean</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={classes.home}>
				<div className={classes.container}>
					<Banner btnText={btnText} btnHandler={handleBtnClick} />
					{locationErrorMessage && (
						<p>Something went wrong: {locationErrorMessage}</p>
					)}
					<div className={classes.heroImage}>
						<Image
							src="/images/site/hero-image.png"
							alt="image of a women enjoying coffee"
							width={700}
							height={400}
						/>
					</div>
					{error && <p>error</p>}
					{coffeeStores &&
						coffeeStores.map((store) => {
							return (
								<Card
									id={store.fsq_id}
									key={store.fsq_id}
									name={store.name}
									url={
										store.images[0] ||
										'https://images.unsplash.com/photo-1469631423273-6995642a6a40?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=903&q=80'
									}
								/>
							);
						})}
				</div>
			</main>
		</>
	);
}

export async function getStaticProps(context) {
	const stores = await getStores();
	if (!stores) {
		return {
			props: {
				stores: null,
			},
		};
	}
	return {
		props: {
			stores,
		},
	};
}
